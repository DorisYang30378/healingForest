@model postArticle.viewmodel.ArticleManageViewModel

@{
	ViewBag.Title = "發布文章";
	
}

<meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests" />
<script src="~/Scripts/CKEditor/build/ckeditor.js"></script>
<style>
	body {
		background-color: #DBF0D0;
		font-family: Arial, sans-serif;
	}

	.form-container {
		max-width: 700px;
		margin: 0 auto;
		background-color: #f5f5f5;
		padding: 20px;
		border-radius: 5px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	}

	.form-group {
		margin-bottom: 20px;
	}

	.form-label {
		font-weight: bold;
		margin-bottom: 10px;
	}

	.form-control {
		width: 800px;
		padding: 10px;
		border: 1px solid #ccc;
		border-radius: 5px;
	}


	.btn-primary {
		display: inline-block;
		padding: 10px 20px;
		background-color: #007bff;
		color: #fff;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		transition: background-color 0.3s ease;
	}

		.btn-primary:hover {
			background-color: #0056b3;
		}
</style>


<hr>
<br>

@using (Html.BeginForm("ArticlePost", null, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-container" }))
{
	@Html.AntiForgeryToken()
	
	<h4>發布文章</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })


<div class="container">
	<div class="row">
		<div class="col-xl-6">
			<label class="form-label" for="Title">標題</label>
			@Html.EditorFor(model => model.article.Title, new { htmlAttributes = new { @class = "form-control", } })
			@Html.ValidationMessageFor(model => model.article.Title, "", new { @class = "text-danger" })
		</div>
		<div class="col-xl-6">
			<label class="form-label" for="Classification">分類</label>
			@Html.DropDownListFor(model => model.article.Classification, new SelectList(Model.Classification), null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.article.Classification, "", new { @class = "text-danger" })
		</div>
	</div>
	<br>
	<div class="row">
		<label class="form-label" for="Content">文章</label>
		<div>

			@Html.TextAreaFor(model => model.article.Content, 18, 50, new { htmlAttributes = new { @class = "ckeditor", @id = "article_Content", rows = 4 } })
			@Html.ValidationMessageFor(model => model.article.Content, "", new { @class = "text-danger" })
		</div>
		<br>

	</div>

	<br>
	<div class="row">
		<label class="form-label" for="file">圖片</label>
		<input type="file" name="file" id="file" accept="image/*" required onchange="previewImage(event)" />
		<br>
		<img id="imagePreview" src="~/Uploads/index.png" alt="Image Preview" style="max-width: 700px; max-height: 100%;" />
		@Html.HiddenFor(model => model.article.ImageURL, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.article.ImageURL, "", new { @class = "text-danger" })
	</div>
	<br>

	<label>
		@Html.CheckBoxFor(model => model.IsChecked)
		專業文章
	</label>
			
			<br>
			@Html.HiddenFor(model => model.article.Likes, new { Value = 0 })

			<div class="row justify-content-center">
				<input type="submit" value="確認送出" style="width: 18%; background-color: #97CD7D" class="btn btn-primary" />
			</div>


</div>





}





<script>



	function previewImage(event) {
		var fileInput = event.target;
		var file = fileInput.files[0];
		var reader = new FileReader();

		reader.onload = function (e) {
			var imagePreview = document.getElementById('imagePreview');
			if (imagePreview) {
				imagePreview.src = e.target.result;
			}
		};

		reader.readAsDataURL(file);
	}

	ClassicEditor
		.create(document.querySelector('#article_Content'), {
			toolbar: {
				items: [
					'heading',
					'|',
					'fontFamily',
					'fontColor',
					'fontSize',
					'|',
					'bold',
					'italic',
					'removeFormat',
					'|',
					'specialCharacters',
					'link',
					'bulletedList',
					'numberedList',
					'|',
					'outdent',
					'indent',
					'alignment',
					'|',
					'blockQuote',
					'insertTable',
					'|',
					'undo',
					'redo'
				]
			},
			licenseKey: '',
		})
		.then(editor => {
			editor.ui.view.toolbar.element.addEventListener('ready', () => {
				// 在工具欄準備就緒後執行自訂程式碼
				console.log('Editor toolbar is ready');
				// 在此處添加您的自訂程式碼
			});
		})
		.catch(error => {
			console.error('Oops, something went wrong!');
			console.error(error);
		});

</script>
